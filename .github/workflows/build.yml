name: SonarQube Build and Analyze

on:
  push:
    branches:
      - jian
      - GraphQL
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - name: api1-springboot
            path: project-root/api1-springboot
            build-command: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            sonar-key: your_sonar_project_key_for_api1
            setup-steps:
              - name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                  java-version: 17
                  distribution: 'zulu'
              - name: Cache Maven packages
                uses: actions/cache@v3
                with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
            sonar-properties: |
              sonar.projectName=API1-SpringBoot
              sonar.sources=src/main/java
          - name: api2-express
            path: project-root/api2-express
            build-command: npm install && npm run build && sonar-scanner
            sonar-key: your_sonar_project_key_for_api2
            setup-steps:
              - name: Set up Node.js
                uses: actions/setup-node@v3
                with:
                  node-version: '22.2.0'
              - name: Cache Node.js modules
                uses: actions/cache@v3
                with:
                  path: ~/.npm
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: ${{ runner.os }}-npm
            sonar-properties: |
              sonar.projectName=API2-Express
              sonar.sources=src

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up environment
        run: echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV

      - name: Set up project-specific environment
        run: |
          echo "Setting up environment for ${{ matrix.project.name }}"
        with:
          steps: ${{ toJson(matrix.project['setup-steps']) }}
        shell: bash

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build and analyze ${{ matrix.project.name }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ${{ matrix.project.build-command }} -Dsonar.projectKey=${{ matrix.project.sonar-key }} -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.projectName='${{ fromJson(matrix.project.sonar-properties).sonar.projectName }}' -Dsonar.sources='${{ fromJson(matrix.project.sonar-properties).sonar.sources }}'
